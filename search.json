[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NetStream: Programs for watershed analyses",
    "section": "",
    "text": "Hello\nWelcome to the ever evolving documentation for NetStream, a suite of Fortran programs for watershed analyses. This book describes these programs and shows how to use them for certain types of tasks.",
    "crumbs": [
      "Hello"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "A brief history\nNetStream is a library of Fortran programs used for geomorphic analysis, including the construction of attributed stream layers for use in a Geographic Information System (D. J. Miller 2003). The methods implemented in this library have proven effective for accurate channel-network delineation and attribution (Clarke, Burnett, and Miller 2008; Peñas et al. 2011; D. Miller et al. 2015); they form the foundation for the virtual watershed data structure (Barquin et al. 2015; Benda et al. 2016; González-Ferreras and Barquín 2017) and for the NetMap tools for ArcGIS (Benda et al. 2007). The programs have currently been compiled using the Intel Fortran compiler for the Windows operating system and are run from a command line.\nThese programs started",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "intro.html#a-brief-history",
    "href": "intro.html#a-brief-history",
    "title": "Introduction",
    "section": "",
    "text": "Barquin, José, Lee E. Benda, Ferdinando Villan, Lee E. Brown, Nuria Bonada, David R. Vietes, Tom J. Battin, et al. 2015. “Coupling Virtual Watersheds with Ecosystem Services Assessment: A 21st Century Platform to Support River Research and Management.” WIREs Water 2 (6): 609–21. https://doi.org/10.1002/wat2.1106.\n\n\nBenda, Lee, Daniel J. Miller, Kevin Andras, Paul Bigelow, Gordon H. Reeves, and David Michael. 2007. “NetMap: A New Tool in Support of Watershed Science and Resource Management.” Forest Science 53 (2): 206–19. https://doi.org/https://doi.org/10.1093/forestscience/53.2.206.\n\n\nBenda, Lee, Daniel Miller, Jose Barquin, Richard J. McCleary, TiJiu Cai, and Y. Ji. 2016. “Building Virtual Watersheds: A Global Opportunity to Strengthen Resource Management and Conservation.” Environmental Management 57: 722–39. https://doi.org/10.1007/s00267-015-0634-6.\n\n\nClarke, Sharon E., Kelly M. Burnett, and Daniel J. Miller. 2008. “Modeling Streams and Hydrogeomorphic Attributes in Oregon from Digital and Field Data.” Journal of the American Water Resources Association 44 (2): 459–77. https://doi.org/DOI: 10.1111/j.1752-1688.2008.00175.x.\n\n\nGonzález-Ferreras, A. M., and J. Barquín. 2017. “Mapping the Temporary and Perennial Character of Whole River Networks.” Water Resources Research. https://doi.org/10.1002/2017wr020390.\n\n\nMiller, Daniel J. 2003. “Programs for DEM Analysis.” In. Fort Collins, CO, USA: USDA Forest Service, Rocky Mountain Research Station. https://www.fsl.orst.edu/clams/download/pubs/miller_DEM_Programs_2003.pdf.\n\n\nMiller, D., L. Benda, J. DePasquale, and D. Albert. 2015. “Creation of a Digital Flowline Network from IfSAR 5-m DEMs for the Matanuska-Susitna Basins: A Resource for Update of the National Hydrographic Dataset in Alaska.” https://www.conservationgateway.org/ConservationByGeography/NorthAmerica/UnitedStates/alaska/scak/Documents/Miller_etal_MatSu_Elevation_Derived_Flow_Network_Report.pdf.\n\n\nPeñas, Francisco J., Felipe Fernández, Mileno Calvo, José Barquín, and Luis Pedraz. 2011. “Influence of Data Sources and Processing Methods on Theoretical River Network Quality.” Limnetica 30 (2): 197–216. https://doi.org/DOI: 10.23818/limn.30.16.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "Data structures\nWhen considering how to use these programs, it is helpful to understand how they store and use information. With that understanding, you will have an idea of how to phrase the questions you ask of the models implemented in these programs. The underlying conceptual model is that of a virtual watershed (Barquin et al. 2015). A virtual watershed is a digital data structure that characterizes physical attributes (e.g., topography, land cover) over all points and establishes the pathways and processes by which those points are connected. A Digital Elevation Model (DEM) provides the spatial template and sets the spatial grain (the finest scale at which any attribute is resolved). A channel network traced from the DEM provides the spatial reference: all locations (DEM grid points or cells) are referenced in terms of their relationship to the channel network.\nThe channel network is recorded digitally using a linked-node-list data structure. Channel courses traced from the DEM extend step-by-step from one DEM grid point to an adjacent point. Each DEM grid point defines a node along the channel course. Each node can reference the adjacent upstream and downstream nodes. Hence, flow paths can be followed both up- and down-stream throughout the DEM.\nEach channel node has an associated list of attributes with information about the point along the channel represented by that node. These attributes include basic information about the channel itself, such as elevation, gradient, and contributing area. They may include information about the contributing area, such as annual precipitation, land cover, and geology.\nImportantly, each DEM grid point, and its corresponding cell, is associated with one or more channel nodes. The associated node, or nodes, may be determined from the gravity-driven flow path as determined from the topography inferred from the DEM- the path that surface water flowing over the ground surface would follow from the DEM grid point to the channel. Each DEM grid point thus has an associated set of attributes relating it to the channel network, including flow distance to the channel it drains to and attributes of that channel, such as size, gradient, and sediment transport capacity.\nLikewise, each channel node has an associated channel-adjacent contributing area defined by those flow paths. These channel-adjacent areas extend outward from the node to each side of the channel, like wings. They are referred to as drainage wings.\nDrainage wings provide a unique discretization of a watershed referenced to the channel network. Attributes of a wing can be assigned to its associated node, including basic measures such as its size and land cover. These attributes may include modeled values, such as estimates of the sediment and organic inputs a wing may provide to the channel. We can divide roads into segments based on intersections with the drainage wings, thus parsing a road network in terms of its potential connectivity with the channel network.\nFlow paths provide indicators of hydrologic connectivity, needed for characterizing processes involving movement of water and water-carried material through a watershed. Other types of processes may require other measures of connectivity, such as the Euclidean (straight line) distance from a DEM grid point to a channel.\nUse of a linked list of channel nodes and discretization of a watershed in terms of associated channel nodes provides an efficient data structure for routing of information across a watershed. The DEM-traced channel network is the framework on which this structure is built, reflected in the name NetStream. The first step for almost all NetStream analyses is creation of that channel network, performed by the program bldgrds. Subsequent programs can read the channel node list created by bldgrds to perform a variety of analyses and to write output shapefiles and raster files readable by a GIS. These programs are listed and described starting with 1  Bldgrds.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "prerequisites.html#data-structures",
    "href": "prerequisites.html#data-structures",
    "title": "Prerequisites",
    "section": "",
    "text": "Channel nodes\n\n\n\n\n\n\n\n\nDrainage wings for a portion of a headwater basin in the Sprague River watershed, in southern Oregon.\n\n\n\n\n\n\n\nParsing of DEM cells based on the closest channel node.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "prerequisites.html#input-files",
    "href": "prerequisites.html#input-files",
    "title": "Prerequisites",
    "section": "Input Files",
    "text": "Input Files\nPrograms in the NetStream suite all use ASCII (text) input files with a similar file structure and format. The input files specify any input and output file names and locations, specify the tasks to be performed, and provide any parameter values needed to perform those tasks.\n\nKeywords and arguments\nInput files use a “keyword: argument(s)” format. The keyword indicates either what the following arguments are for or indicates a specific task or program option. Entries are identified as a keyword by the following colon (:); any needed arguments follow the keyword; multiple arguments are separated by commas; and if an argument specifies a numerical or logical parameter name, its value is specified after an equal sign. A pound sign (#) indicates a comment; any unrecognized entries are ignored (so if you misspell a keyword, it will be ignored).\nHere is an example keyword: argument pair:\n\nDEM: c:\\data\\Snoqualmie\\elev_snoqualmie\n\nThis is an input line used by many of the programs. It specifies the DEM file to use. The keyword “DEM” is indicated by the colon; the following argument specifies the location (c:\\data\\Snoqualmie\\) and name (elev_snoqualmie) of the DEM file.\n\n\n\n\n\n\nSeveral things to note about DEM files\n\n\n\n\nNetStream programs use a default file name “elev_ID” for DEMs. The “ID” indicates the dataset name. The programs strip off the ID when the “elev_ID” format is used. Subsequent output files that use default names then get the same ID suffix.\nThe full path is required when specifying a DEM file. The programs strip off the path when reading this input line. Any other DEM-related files required by the program are then looked for in the folder specified by the path.\nNetStream programs can only read three raster-file formats:\n\nbinary floating point (.flt)\ntiff, but only uncompressed or those with LZW compression\nBIL single band (.bil)\n\nIf no extension is included, the file is assumed to be .flt. If an .flt file with that name cannot be found, the program will look for a file with .tif extension.\n\n\n\nHere’s an example with multiple arguments:\n\nOUTPUT NODE POINT SHAPEFILE: c:\\data\\Snoqualmie\\node_test, SPLITS = 4\n\nHere the keyword, or in this case, the keyword phrase (OUTPUT NODE POINT SHAPEFILE) specifies an output file to create. The first argument (c:\\data\\Snoqualmie\\node_test) specifies the location and name of the shapefile to create. The second argument (SPLITS = 4) specifies that the output should be split into four separate shapefiles (this is needed because, for large datasets, ArcGIS can only read shapefile attribute tables of two Gbytes or less).\n\n\n\n\n\n\nImportant\n\n\n\nKeywords and arguments are case sensitive.\n\n\nEach program has a specific set of keyword: argument pairs that it recognizes. I’ll describe these in the chapters describing the programs.\n\n\nAttribute lists\nFor programs that generate output GIS vector files, either point or polyline shapefiles, the data fields to include in the attribute table are specified with an attribute list. An attribute list is initialized with the “ATTRIBUTE LIST” keyword; the “END LIST” keyword flags the end of the list. Here’s an example:\n\n#===================================\nATTRIBUTE LIST:\n#———————————————————–\nID:\nLENGTH:\nCONTRIBUTING AREA: OUTPUT FIELD = AREA_SQKM\nMEAN ANNUAL PRECIP: FILE = c:/work/data/wrangell/precip_utm8n, OUTPUT FIELD = MNANPRC_M\nVALLEY WIDTH: CHANNEL DEPTHS = 5.0, OUTPUT FIELD = VAL5CW\n#———————————————————–\nEND LIST:\n#===================================\n\nEach keyword within the list specifies an output data field. These are generally attributes recognized by the program and will trigger a call to specific subroutines for calculating the attribute values. If the keyword is not recognized by the program, the data field will be created, but filled with nodata values. A full description of the data-field options available is provided in 2  Attribute Lists.\n\n\nEquations\nA data field specified in an attribute list may be defined by an equation using other data fields in the attribute list. Equations are of the form:\n\\[\ny = \\beta_0 + \\beta_1x_{1.1}^{e_{1.1}}x_{1.2}^{e_{1.2}}... + \\beta_2x_{2.1}^{e_{2.1}}x_{2.2}^{e_{2.2}}...\n\\]\nHere, the \\(\\beta_i\\) and \\(e_{i.j}\\) are empirical coefficients and the \\(x_{i.j}\\) are data-field variables included elsewhere the attribute list. A data-field entry is flagged as an equation by the “EQUATION” argument. The next line(s) specify the constant term \\(\\beta_0\\) with the CONSTANT keyword and each \\(\\beta_ix_{i.j}^{e_{i.j}}\\) term with the TERM keyword. The equation entries are terminated by the END EQUATION keyword. Here is an example:\n\n#==================================\nATTRIBUTE LIST:\n#———————————————————-\nCONTRIBUTIND AREA: OUTPUT FIELD = AreaSQKM\nMEAN ANNUAL PRECIP: FILE = c:\\prism\\prism_utm10n, OUTPUT FIELD = MnAnPrcM # mean annual precipitation in meters depth\nMEAN ANNUAL FLOW: OUTPUT FIELD = MeanAnnCMS, EQUATION # mean annual flow in cubic meters per second\nTERM: FIELD = AREA_SQKM, COEF = 0.014, EXPONENT = 0.99, FIELD = MNANPRC_M, EXPONENT = 1.59\nEND EQUATION:\n#——————————————————–\nEND LIST:\n#===================================\n\nIn this case, the attribute for mean annual flow (MeanAnnCMS) is defined by the equation\n\\[\nMeanAnnCMS = 0.01454(AreaSQKM^{0.99})(MnAnPrcM^{1.593})\n\\]\nwhere AreaSQKM is contributing area and MnAnPrcM is mean annual precipitation. If there were a constant term \\((\\beta_0)\\), it would be specified by a line with keyword “CONSTANT:” followed by an argument with the value. If there were additional \\(\\beta_ix_{i.j}^{e_{i.j}}\\) terms, these would be specified by additional lines with a “TERM:” keyword. This format allows specification of a large variety of equation forms.\n\n\nRaster lists\nData-field attributes can also be calculated from analysis of raster files. For example, we can define a data field that gives the mean gradient or the proportion of the contributing area within each land-cover class over the contributing area to each node, if a gradient or land-cover raster are provided. These tasks are specified using a raster list, initiated with the “RASTER LIST:” keyword.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "prerequisites.html#file-formats",
    "href": "prerequisites.html#file-formats",
    "title": "Prerequisites",
    "section": "File Formats",
    "text": "File Formats\nNetStream programs can read binary floating point (.flt) raster files. Uncompressed tiff (.tif) files, and tiff files with LZW compression, can also be read. Certain programs can read binary interleaved by line (.bil) raster files. Raster file names can be specified in the ascii input file without the extension. The programs will look first for an “.flt” file. If none is found, it will look for a “.tif” file.\nNetStream programs can read point, polyline, polylineZ, and polygon shapefiles. No extension is needed in the file name.\nNetStream programs can currently only write floating point binary (.flt) raster files and point, polyline, and polylineZ shapefiles.\nWhen other file formats are required, these files must be converted, which any GIS can do, or using GDAL (which can be called within python and R).",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "prerequisites.html#section",
    "href": "prerequisites.html#section",
    "title": "Prerequisites",
    "section": "",
    "text": "Barquin, José, Lee E. Benda, Ferdinando Villan, Lee E. Brown, Nuria Bonada, David R. Vietes, Tom J. Battin, et al. 2015. “Coupling Virtual Watersheds with Ecosystem Services Assessment: A 21st Century Platform to Support River Research and Management.” WIREs Water 2 (6): 609–21. https://doi.org/10.1002/wat2.1106.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "programs.html",
    "href": "programs.html",
    "title": "Programs",
    "section": "",
    "text": "The library includes the following primary programs (in alphabetical order):\n\naddData: adds requested attributes to an existing stream-layer shapefile created previously with netrace.\nbarrier: identifies physical barriers to fish passage; requires a channel-node stream layer created from a high-resolution (lidar) DEM\nbldgrds: Builds a stream layer as a linked-node list from a DEM, stored in a binary data file. Auxiliary outputs include flow-accumulation and flow-direction rasters. The binary stream-layer file is read by all subsequent programs that use the stream layer.\nclosedDepressions: delineate all closed depressions within a DEM; optionally filter by size.\nDEV: calculate topographic position index values over specified length scales. Includes local relief and deviation from mean elevation (DEV).\nmakeGrids: builds rasters of elevation derivatives.\nmerge: merge high- and low-resolution DEMs into a single DEM. DEMs are warped over a specified length scale to prevent discontinuities at the seams.\nmergeToHigh: merge two high-resolution DEMs, ensuring a smooth transition from one to the other.\nnetrace: reads the binary stream-layer file and builds point and/or polyline shapefiles readable by any GIS. Calculates requested attributes for each record.\nvalleyFloor: builds a binary data file giving elevation above the channel. This data file can be used to determine valley widths at specified elevations above a channel and to create raster files showing elevation relative to the channel (i.e., “height-above-channel” rasters).\nwaterMaskByTopo: create a mask delineating open water using infrared band imagery and a DEM. Used by bldgrds when constructing a stream layer.\nwatershed: delineates the contributing area to specified points on the channel-node stream layer. Used, for example, to create a nested hierarchy of basins (e.g., Hydrologic Unit Code basins).\nmore to come",
    "crumbs": [
      "Programs"
    ]
  },
  {
    "objectID": "Bldgrds.html",
    "href": "Bldgrds.html",
    "title": "1  Bldgrds",
    "section": "",
    "text": "1.1 Run-time options\nBldgrds creates a digital representation of a channel network; a “stream layer” in GIS terminology. The steps for doing that are described in Chapter 3. The primary input is a Digital Elevation Model (DEM). Bldgrds can utilize a variety of auxiliary input files to control where channels may and may not occur and to direct channel courses (e.g., drainage enforcement to another existing stream layer). To build the channel network, bldgrds will modify elevations within the DEM, for example, to carve an outlet from a closed depression. These altered elevations are used to define flow directions. All subsequent analyses, finding hillslope and channel gradients for example, are based on the original DEM elevations.\nBldgrds can be run in three ways, controlled by the presence or absence of certain keywords in the input file.",
    "crumbs": [
      "Programs",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bldgrds</span>"
    ]
  },
  {
    "objectID": "Bldgrds.html#run-time-options",
    "href": "Bldgrds.html#run-time-options",
    "title": "1  Bldgrds",
    "section": "",
    "text": "Calibrate. With the CALIBRATE keyword (no arguments), bldgrds will calculate flow directions and flow accumulation without initiating any channels. The D-infinity flow-direction algorithm is used for all DEM cells. Flow-direction and flow-accumulation rasters are produced. Two additional output files are also created:\n\nareathreshold_ID.csv. This is a comma delimited file. There are a series of eight header lines with details about the parameters used for the bldgrds run. These are: i) the path to the DEM and other input data files, ii) the dataset ID, iii) whether or not specific contributing area (area divided by the contour length crossed by flow exiting a DEM cell) was used, iv) Smin, the gradient limit below which DEM cells are classified as low-gradient terrain, v) Smax, the gradient limit above which DEM cells are classified as high-gradient terrain, vi) alpha, the exponent used for slope with the area-slope function for channel initiation, vii) Accumulation length scale, diameter in meters overwhich slope aspect is measured, and viii) Gradient length scale, the diameter in meters over which hillslope gradient is measured. Following the header lines are two columns, one for the area-slope function value and one for the channel density obtained (km/km2) using that area-slope value as the threshold for channel initiation. Units for the AREA column depend on whether or not specific area was used. If it was, the units are meters, if not, the units are square meters. The values for high-gradient areas are listed first, followed by the values for low-gradient areas. These entries are used to plot the log-log plots of threshold value versus channel density, used to find ball-park values for area-slope thresholds for channel initiation.\nthreshold_ID.flt. A binary floating point raster indicating the area-slope threshold required to allow channel initiation at each DEM cell. This can be plotted in a GIS to see how far upslope different threshold values extend.\n\nNo Channels. Initiated with the NO CHANNELS keyword. This is similar to a calibration run, in that no channels are initiated, but the two threshold output files are not created.\nIf neither of the CALIBRATE or NO CHANNELS keywords are included in the input file, bldgrds will create a channel network with the associated output files.",
    "crumbs": [
      "Programs",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bldgrds</span>"
    ]
  },
  {
    "objectID": "Bldgrds.html#input-data-files",
    "href": "Bldgrds.html#input-data-files",
    "title": "1  Bldgrds",
    "section": "1.2 Input data files",
    "text": "1.2 Input data files\n\n1.2.1 DEM raster\nThe primary and only required input file is a DEM (keyword DEM FILE), consisting of a raster of elevation values in either binary floating point (.flt) or tiff (.tif) format (only uncompressed tiff files or those with LZW compression can currently be read). NetStream programs use a default DEM file name of elev_ID, where “ID” is a character string that identifies the dataset. It is copied from the DEM-file name and applied as a suffix to output data files created from the DEM.\nA variety of optional input files can be used to control placement of channels.\n\n\n1.2.2 GMI or Flow-Indicator raster\nA “Geomorphic Index” raster (keyword GMI RASTER). These are used by the US Geological Survey to aid contractors building elevation-derived hydrography (see New Developments in Elevation-Derived Hydrography Acquisition Specifications and Validation). These prove useful for guiding channel courses in low-relief terrain. The NetStream program FlowCat can be used to build a GMI raster.\n\n\n1.2.3 Topographic Position Index (TPI)\nA topographic position index raster (keyword LOCAL RELIEF RASTER) can be used as a criteria for identifying channel initiation points and/or for guiding channel courses, similar to a GMI raster. The NetStream program makeGrids can be used to build a topographic position raster (also referred to as a local relief raster).\n\n\n1.2.4 Water mask\nOne or more water-mask files may be specified (keyword WATER MASK). A water mask delineates areas of open water along larger river channels and water bodies and is provided as either a polygon shapefile or a raster with nonzero values indicating the mask. Lidar laser signals are largely absorbed by water, so zones of open water lack signal returns in the lidar point cloud. The DEM elevations through these zones are interpolated from signals along the edge of the channel or are set to a constant elevation by hydro-flattening. In either case, the DEM provides no guidance for channel courses through these zones and the traced channel centerlines can wonder back and forth within the zone, as described in Section 3.4.2. Where this occurs, measured channel length will be too long and calculated channel gradients will therefore be too small.\n\n\n1.2.5 Road crossings\nOne or more polyline shapefiles can be specified for breaching high points in a DEM (keyword LINE EXCAVATE). With high-resolution DEMs, road prisms are resolved and can act to divert the traced flow paths. Culverts and other drainage structures are not generally visible in the DEM and need to be specified from other data sources. This is typically done by manually digitizing a line that crosses the road prism at known or inferred culvert locations, as described in Section 3.5.\nBldgrds will find the points of highest and lowest elevation along the digitized line and “excavate” a swale following the line from the high point to the low point. The modified DEM is then used for determining flow accumulation and resulting channel courses.\n\n\n1.2.6 Channel mask\nOne or more polyline shapefiles may be specified for drainage enforcement (keyword CHANNEL MASK). Drainage enforcement can be performed in two ways\n\nBy excavating a swale into the DEM along the channel-mask line, a technique referred to as “stream burning”. Keyword arguments specify the depth and width of the swale. Flow directions are then determined for the DEM with the burned-in swale. All elevation derivatives, however, such as channel gradient, are calculated using the original DEM, so if the enforced channel does not follow accurate channel flow paths on the DEM, for example, if it goes up the side of the valley wall, calculated channel attributes will be in error.\nBy setting flow directions to explicitly follow the channel mask line. This over rides flow directions based on elevation relationships in the DEM. Up- and down-stream flow directions are based on the order in which the vertices along the channel mask line occur, so all lines must be digitized in a consistent direction, either all upstream or all downstream. This directional enforcement is triggered with the argument DIRECTIONAL. The default digitization direction assumed is downstream. If digitization is upstream, then the argument UPSTREAM is required.\n\nA combination of both burning in and directional enforcement can be used. In that case, the flow directions are set by the digitized line and the depth and width of the swale determine the distance overwhich flow is directed towards the enforced channel.\nChannel masks are useful for guiding channel locations through low-relief areas where the DEM topography provides little guidance or to force traced channels to match an existing stream layer.",
    "crumbs": [
      "Programs",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bldgrds</span>"
    ]
  },
  {
    "objectID": "Bldgrds.html#output-data-files",
    "href": "Bldgrds.html#output-data-files",
    "title": "1  Bldgrds",
    "section": "1.3 Output data files",
    "text": "1.3 Output data files\nLinked-node list. A binary file that stores the traced channel network in a linked-node data structure. The file is named nodeNet_ID.dat, where the “ID” is the character string taken from the DEM file name (elev_ID). An ascii log file (nodeNet_ID.log) is also created which provides information about how and when the data file was created.\nFlow accumulation raster. A binary floating point raster file giving the contributing area to each DEM cell in number of inflowing cells. The file is named accum_ID.flt, with accompanying ascii header (accum_ID.hdr) and log (accum_ID.log) files.\nFlow direction raster. A binary floating point raster file giving the flow direction for each DEM grid point in radians measured from north. The file is named ang_ID.flt, with accompanying ascii header (ang_ID.hdr) and log (ang_ID.log) files.",
    "crumbs": [
      "Programs",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bldgrds</span>"
    ]
  },
  {
    "objectID": "Bldgrds.html#keyword-arguments-for-input-files",
    "href": "Bldgrds.html#keyword-arguments-for-input-files",
    "title": "1  Bldgrds",
    "section": "1.4 Keyword: arguments for input files",
    "text": "1.4 Keyword: arguments for input files\n\n1.4.1 DEM File\nDEM FILE: Filename # required.\n\nFilename specifies either a binary floating point raster (.flt) or tiff (.tif) file (only uncompressed tiff files or those with LZW compression can currently be read). DEM files are named elev_ID, where the “ID” is a character string indicating the data set. The file extention does not need to be included, but the entire path is required (e.g., c:\\data\\wrangell\\elev_wrangell).\n\n\n\n1.4.2 GMI Raster\nGMI RASTER: Filename, DIG = x, INIT, MIN GMI = i # optional. Geomorphic Index Raster.\n\nFilename, either a .flt or .tif file, specified with the full path name. No default name.\n“DIG” triggers drainage enforcement along GMI patches, with “x” indicating a value in meters. The value of a GMI-raster pixel indicates the number of topographic indices indicative of a channel at the location of that pixel. These values typically range from zero up to four, because four topographic indices are typically used to generate a GMI raster. Where GMI cells have a value greater than zero, the DEM elevation is lowered by the value GMI*x. So if DIG = 0.5 is specified and GMI = 4, the elevation at that DEM cell is lowered 2 meters. If DIG = 0. or no DIG argument is included, then no drainage enforcement is performed with the GMI raster.\nMIN GMI, if present, limits channel initiation to pixels where the GMI value is greater than or equal to the specified value. MIN GMI = 2 will limit channel initiation to locations where the GMI value is \\(\\geq\\) 2. If no MIN GMI argument is included, channel initiation can occur anywhere the channel-initiation criteria are met.\n\nSCRATCH DIRECTORY: directory path # required. Location for writing temporary files to disk, e.g., c:\\temp.\nWATER MASK: FILE=filename, MINIMUM PATCH SIZE = x, MINIMUM GRADIENT = x, RADIUS = x, MINIMUM WIDTH = x, INCISE = x, PRECLUDE INITIATION, ALLOW INITIATION, FORCE INITIATION, SET TO MINIMUM ELEVATION, LOWER ELEVATION, INCISE TO CENTER\n\nFILE = filename, full path and name of either a polygon shapefile or a raster file indicating a water mask. If a polygon file, all polygons are interpreted as part of the mask. If a raster file, any pixel with value greater than zero is interpreted as part of the mask.\nMINIMUM PATCH SIZE = x, MINIMUM GRADIENT = x. These influence the size of the masked zones that get interpreted as a water mask. Optimal values need to be determined by trial and error because they vary depending on the shape and complexity of the masks. Default values are set to MINIMUM PATCH SIZE = 250. and MINIMUM GRADIENT = 0.75. These will work well for most cases.\nRADIUS = x, limits the width of water-mask patches that can be resolved. Larger values cause longer run times, but the radius must be at least half as large as the largest width of any river or water body within the dataset, otherwise the traced channel centerlines will not follow the center of the mask.\nMINIMUM WIDTH = x, water mask patches with a along-flow-direction width less than x are ignored, with x in meters.\nPRECLUDE INITIATION. If this argument is included, channel initiation is not allowed within the water mask.\nALLOW INITIATION. If this argument is included, channel initiation is allowed, but not required, within the water mask.\nFORCE INITIATION. If this argument is included, channel initiation is forced so that all water-mask centerlines are included in the channel network.\nSET TO MINIMUM ELEVATION. This argument will cause all elevations within the watermask to be set to the minimum elevation found within the mask. This is appropriate for water bodies, which (typically) have a constant water-surface elevation. This is not generally used for river water masks.\nINCISE TO CENTER. This argument is used to force traced channel flow paths to the center of the water mask polygons.\nMultiple water-mask files may be specified, each with its own set of arguments. For example, separate water masks might be used for rivers and for water bodies, or for small rivers, for which a small radius can be specified (with a shorter run time) and large rivers, such as at river mouths at estuaries, for which a large radius may be required (with a longer run time).\n\nCHANNEL MASK: FILE=filename, DIG = x, RADIUS = x, MAX SLOPE = x, INIT, FORCE INITIATION, DIRECTIONAL, UPSTREAM, TOP POINT, POINT RADIUS\n\nFILE = filename, full path and name of a polyline shapefile.\nDIG = x, the depth in meters to excavate the channel-enforcement swale.\nRADIUS = x, the width of the swale in meters measured from the channel centerline. The total swale width will be twice the radius. The DIG and RADIUS arguments determine the size of the swale. Flow directions within the swale will be directed toward the center of the swale.\nMAX SLOPE = x, channel enforcement is not performed where the slope gradient exceeds this value. This can be used to prevent poorly located enforcement lines from extending onto channel-adjacent hillslopes.\nINIT, if this argument is included, channel initiation is allowed along enforced channels if all channel-initiation criteria are met.\nFORCE INITIATION, if this argument is included, channel initiation is forced within enforced channels, even if the channel-initiation criteria are not met.\nDIRECTIONAL, this argument indicates that the channel-mask polylines are digitized consistently in either a downstream or upstream direction. It then forces the flow directions to follow the digitized line. The default direction is downstream. If the polylines are digitized in an upstream direction, then the UPSTREAM argument must also be included.\nUPSTREAM, this argument indicates that the channel-mask polylines are digitized in an upstream direction. This argument is only required if the DIRECTIONAL argument.\nTOP POINT, if this argument is present, the enforcement lines are traced to their upstream end and a channel initiation point placed at the most likely initiation location within the radius (in meters) specified by the POINT RADIUS argument. The channels are not enforced downstream of that point.\nPOINT RADIUS, the radius (meters) overwhich to search for the most likely channel initiation point at the upstream end of channel-enforcement lines.",
    "crumbs": [
      "Programs",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bldgrds</span>"
    ]
  },
  {
    "objectID": "attributeLists.html",
    "href": "attributeLists.html",
    "title": "2  Attribute Lists",
    "section": "",
    "text": "The attributes generated for the synthetic channel networks used by Netstream programs are specified in the input file with an attribute list, as described in Section 1.2. Programs that use a channel-node list data structure created with the bldgrds program (Chapter 1) will generally include an attribute list with their input file to specify the attributes of the network and its watershed that the program will use internally and to specify the data fields to include in output shapefile attribute tables.\nAttributes are specified using a “keyword: argument” format. A keyword may have multiple arguments. Each argument has a name and may have a value associated with it. For example, the keyword “VALLEY WIDTH” triggers calculation of the valley width at each channel node. This keyword requires an argument specifying the elevation above the channel at which to measure the valley width. This elevation may be measured in meters using the argument “ELEVATION = X”, where “X” specifies the elevation in meters or using the argument “CHANNEL DEPTHS = X”, where “X” specifies the elevation in terms of the channel depth calculated for each node.\nCertain keywords have required prerequisites. For example, if the VALLEY WIDTH keyword is used, the valleyFloor_ID.dat binary data file must be present. This data file is created by program ValleyFloor. Likewise, if elevation above the channel is specified in terms of CHANNEL DEPTHS, then the keyword DEPTH must also be present in the attribute list so that channel depth will be available. And to calculate channel depth, the attribute-list entry will require use of the “equation” format to specify the equation used to calculate channel depth, which will require other data attributes, such as contributing area, which must also be included in the attribute list.\nFollowing is a list of keyword: argument options available for Netstream programs. This list is probably incomplete (I can’t remember all the options I’ve written subroutines for so have to search through the rather lengthy code base). I’ll start with the most commonly used keywords.\nCertain optional arguments can be used for any keyword. These include:\n\nOUTPUT FIELD = field name, the output field name in shapefile attribute lists. Note that shapefile data field names can be no more than 10 characters.\nLEN = integer value, the number of digits to include for numeric values.\nDECCNT = integer value, the number of digits after the decimal place. For example, if LEN = 8 and DECCNT = 3, the output value would have 5 digits to the left of the decimal point and 3 digits to the right.\nTYPE = character, options are “I4” (4-byte integer), “I8” (8-byte integer), “R4” (4-byte real), “R8” (8-byte real), “C” (character)\nData-field values may be stored in a binary data file named nodeAttributes_ID.dat. If this file exists, Netstream programs will look for requested attribute values there. If you want to force recalculation of an attribute value, this can be done with the argument REPLACE.\n\nOther important notes.\n\nKeywords must be followed by a colon. Otherwise, they will not be recognized as keywords.\nKeywords and arguments are case sensitive.\nQuotation marks are not required when entering character values for arguments.\nThe order in which keywords are entered in the attribute list does not matter.\n\n\n\n\nKeyword\nArgument\nDescription\n\n\n\n\nCONTRIBUTING AREA:\n\nUpstream contributing area to each channel node in square kilometers.\n\n\nELEVATION:\n\nElevation of each channel node in meters.\n\n\nSTREAM ORDER:\n\nStrahler stream order\n\n\nMEAN ANNUAL PRECIPITATION:\nFILE = file name (full path), raster file of mean annual precipitation\nFACTOR = real value (optional),\nUNIT = “mm” or “m” or “in” (optional)sec-equationssec-equations\nMean annual precipitation over the contributing area to each channel node in meters depth. Raster files of mean annual precipitation depth based on 30-year normals are available from the PRISM Climate Group. These rasters must be projected to the same coordinate system used by the DEM from which the channel network was constructed. PRISM values are reported in millimeters (mm) depth. This is the default assumed by Netstream programs. If the units are in meters or inches, these are specified using the UNIT argument. The FACTOR argument can be used to set the conversion explicitely. For example, if the raster gives precipitation depth in feet, then use FACTOR = 0.3048 to convert to meters.\n\n\nMEAN ANNUAL FLOW:\nEQUATION (see Section 1.3)\nMean annual flow in qubic meters per second, based on a regional regression equation.\n\n\nWIDTH:\nEQUATION (see Section 1.3)\nEstimated channel width in meters, based on a regional regression equation.\n\n\nDEPTH:\nEQUATION (see Section 1.3)\nEstimated channel depth in meters, based on a regional regression equation.\n\n\nVALLEY WIDTH:\nELEVATION = real value, elevation above channel in meters to measure valley width.\nCHANNEL DEPTHS = real value, number of channel depths above the channel at which to measure valley width.\nRIGHT, (optional) returns valley width on the right side of the channel (looking downstream).\nLEFT, (optional) returns valley width on the left side of the channel (looking downstream).\nValley width in meters at each node.\nOnly one of the ELEVATION or CHANNEL DEPTHS arguments may be specified, not both.\nIf neither the RIGHT or LEFT arguments are included, total valley width is returned.\nMultiple valley width attributes may be specified, e.g., one for the right and another for the left sides of the channel, or one at 2 channel depths and another at 5 channel depths. Each one must have a unique OUTPUT FIELD argument.\n\n\nVWI:\nELEVATION = real value, elevation above channel in meters to measure valley width.\nCHANNEL DEPTHS = real value, number of channel depths above the channel at which to measure valley width.\nValley Width Index, the ratio of valley width to channel width (valley width/channel width), used as a measure of channel confinement. This requires that the keyword DEPTH also be included in the attribute list. One of the arguments ELEVATION or CHANNEL DEPTHS must be specified (not both) to indicate at what elevation above the channel to measure valley width.\n\n\nGRADIENT:\nWINDOW = real value, length in meters over which gradient is calculated.\nCHANNEL WIDTHS = real value, length in channel widths over which gradient is calculated.\nPOLY ORDER = integer, order of the polynomial fit to the channel profile\nChannel gradient. There are many methods for calculating channel gradient. This is the simplest. A polynomial of specified order is fit over a window centered over each node. The gradient of the polynomial at the center point, over the node, is reported as the channel gradient. The window length may be specified in terms of meters, which is then constant regardless of channel size, or in terms of channel widths, in which case the window length increases as channel size increases. POLY ORDER = 1 will fit a straight line, POLY ORDER = 2 will fit a quadratic, and so on.",
    "crumbs": [
      "Data-field options",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Attribute Lists</span>"
    ]
  },
  {
    "objectID": "CreateStreamLayer.html",
    "href": "CreateStreamLayer.html",
    "title": "3  Build a stream layer",
    "section": "",
    "text": "3.1 Flow Direction\nIt seems straightforward: define a flow direction for each DEM cell, iteratively trace flow lines downstream summing cell area as we go to create a flow accumulation raster, set a flow threshold, and voila, a stream layer. That’s basically it, but there are complications. The first two items below discuss issues that are hardwired into Chapter 1. Everything else has user-defined options, although default values are built in for most.\nThe direction of flow for water draining out of a DEM cell is not uniquely defined. Each cell has 8 adjacent cells. Depending on the shape of the ground surface interpolated from the 9 elevation values at the midpoints of the cells, each adjacent cell may contribute all, some portion, or none of its area to the central cell and the central cell may contribute all, some portion, or none of its area (and the accumulated area of the upslope cells that flows into it) to each of the adjacent cells. The simplest strategy is to have all flow from the central cell go to one of the 8 adjacent cells. This is the “D-8” flow-direction algorithm (Jenson and Domingue 1988). It provides a poor estimate of contributing area to a cell that is biased by the 8 flow-direction options. One must also decide which of the 8 adjacent cells to direct flow to, and there are a variety of strategies for that. When D-8 flow paths are needed, we use the D8-LTD algorithm (Orlandini et al. 2003), which corrects for the directional bias. A variety of flow-direction algorithms have been developed that accommodate flow in any direction and can direct flow to multiple downslope adjacent cells (Wilson et al. 2008) and thus allow for flow dispersion. We use the D-infinity algorithm (Tarboton 1997), which allows flow into one or two adjacent cells. Flow accumulation is then calculated using the D-infinity flow directions, until the criteria for channel initiation are met. Downslope of that point, we use D-8 to prevent flow dispersion out of the channel.",
    "crumbs": [
      "Tasks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Build a stream layer</span>"
    ]
  },
  {
    "objectID": "CreateStreamLayer.html#closed-depressions",
    "href": "CreateStreamLayer.html#closed-depressions",
    "title": "3  Build a stream layer",
    "section": "3.2 Closed Depressions",
    "text": "3.2 Closed Depressions\nThese may be actual depressions with no outflow, in which case all inflowing water infiltrates to groundwater, or they be actual depressions with an outflow not visible from the DEM (e.g., road prisms with culverts), or they may be artifacts or errors in the DEM. In general, we want to define a flow path to an outlet from the DEM for every DEM cell. Even for closed depressions with no outlet, water that flows into them exits through some groundwater flow path and eventually flows to a stream somewhere downslope or out of the area represented with the DEM. Two primary approaches are used to deal with closed depressions (Wang, Qin, and Zhu 2019).\n\n3.2.1 Fillling\nThis is the simplest. The depression is filled to the elevation of its lowest pour point (where water would spill out if the depression were filled). Flow directions through the closed depression are then directed toward the pour point. This option destroys any information about flow directions within the closed depression, which we would rather avoid.\n\n\n3.2.2 Carving\nA path is carved from the depression pour point to the lowest point in the depression and from to a location along the flow path from the pour point where the elevation becomes less than or equal to the lowest point in the depression. Flow within the depression is then directed to the lowest point and then out of the depression along the carved path (Soille, Vogt, and Colombo 2003). The flow paths from the pour point heading into and away from the depression follow D8-LTD flow directions. This is the preferred option and the one used in bldgrds.",
    "crumbs": [
      "Tasks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Build a stream layer</span>"
    ]
  },
  {
    "objectID": "CreateStreamLayer.html#channel-initiation",
    "href": "CreateStreamLayer.html#channel-initiation",
    "title": "3  Build a stream layer",
    "section": "3.3 Channel initiation",
    "text": "3.3 Channel initiation\nWe need to specify the conditions where channels initiate. This determines the upslope extent of the channel network and the channel density. We have several strategies:\n\n3.3.1 Local topographic position\nFor high-resolution DEMs interpolated from high-density ground returns (e.g., &gt;1/m2), channels are visible directly in the DEM, as shown in Figure 3.1 below. Channels can be highlighted using a measure of local topographic position (LTP), which provides an indicator of the elevation of a DEM grid point relative to its neighbors. Absolute LTP measures give the difference in elevation of the grid point compared to the mean or median grid-point elevations within a specified circular neighborhood. Relative measures normalize that elevation difference by some measure of elevation variability in the neighborhood. Deviation from mean elevation (DEV), for example, divides the difference from mean elevation by the standard deviation of DEM grid-point elevations within the neighborhood (Newman, Lindsay, and Cockburn 2018). Thus, a small channel incised 0.25 meters traversing flat, low-relief terrain (with a small standard deviation in elevation values) will have a large DEV value compared to a small channel incised 0.25 meters traversing steep, rough terrain (with a larger standard deviation). For determining upslope channel extent, we can specify an LTP threshold value and exclude channel initiation in areas where the LTP value is greater than that threshold (i.e., channel incision is too small). One must decide on whether to use an absolute or relative measure and on the appropriate length scale for the local neighborhood. I find an absolute measure easier to interpret than a relative measure, because it provides a direct estimate of the depth of channel incision; I can decide that traced channels begin only when a channel is incised to more than 0.2 meters (LTP &lt; -0.2), for example. The radius to choose for the local neighborhood should be set relative to the resolution of the DEM, the roughness of the terrain (greater roughness requires larger neighborhoods), and the smallest width of channels you want to identify. Typically, at their upslope extent, channels are less than a meter wide, so a radius of five meters or more will suffice for calculating LTP.\n\n\n\n\n\n\nFigure 3.1: Channel features visible in a low-gradient region of a high-resolution (1m) DEM, Sprague River Basin, Southern Oregon\n\n\n\n\n\n3.3.2 Area-slope threshold\nWhere the lidar ground-return-point density is insufficient to resolve channels at their upslope extent, we need to infer channel-initiation locations indirectly. One strategy for this is to estimate where on the landscape there may be sufficient flowing water to erode a channel. The contributing (drainage) area to any point on the landscape indicates the upslope area from which overland flow and water infiltrating to shallow subsurface flow through the soil can originate. Hence, differences in contributing area provide indicators of relative differences in overland- and shallow-subsurface discharge; greater contributing area implies greater discharge. This is the idea behind using thresholds in contributing area to estimate upslope channel extent: for a given climate and terrain, some minimum contributing area is required for sufficient discharge to erode a channel. The erosive power of water depends not only on how much water there is, but also on the steepness of the slope it is flowing over or through. Hence, threshold values for functions of contributing area and ground-surface slope may provide better indicators of where channels initiate than contributing area alone. We use the function ASe, where A is contributing area, S is tangent of the ground-surface gradient, and e is a user-specified exponent (Montgomery and Foufoula-Georgiou 1993). Contributing area may be specified as specific contributing area, which is the contributing area divided by the length of a contour line crossed by flow exiting the DEM cell (Gallant and Hutchinson 2011). This accounts for effects of topographic convergence and divergence on the depth of flow and is the default in bldgrds.\nBasin topography is found to exhibit certain scaling relationships between contributing area and gradient that delineate divergent, convergent, and channelized topography (Ijjasz-Vasquez and Bras 1995). We capitalize on these to calibrate threshold values for channel initiation. Following Clarke, Burnett, and Miller (2008), we plot channel density as a function of the ASe value and look for the inflection in log-log plots that indicate a transition to the channelized regime, as shown in Figure 3.2 below. With the “CALIBRATE” keyword, bldgrds will generate an output comma delimited file (.csv) with which to construct this graph.\n\n\n\n\n\n\nFigure 3.2: Log-log plot of channel density versus the AS2 threshold value. The inflection to higher densities indicates a transition to convergent topography.\n\n\n\nThis provides a ball-park estimate of the threshold value appropriate for the terrain as represented with the DEM. Plots are produced separately for steep terrain and low-gradient terrain, under the assumption that channel-forming processes may differ, e.g., landsliding on steep terrain and fluvial erosion on low-gradient terrain.\n\n\n\n\n\n\nFigure 3.3: Slope-area thresholds differentiating divergent and convergent topography for well-resolved channels shown in the left panel and for poorly resolved channels shown in the right panel.\n\n\n\n\n\n3.3.3 Plan curvature\nPlan curvature measures the rate of change in elevation measured in a direction tangent to a contour line; it indicates the curvature of the contour. Tangential curvature is similar, but measures the rate of change relative to a plane oriented tangent to the ground surface, whereas plan curvature measures curvature relative to a horizontal plane (Minár, Evans, and Jenčo 2020). Both provide another measure for topographic indication of presence of a channel. Bldgrds has the option to specify thresholds of plan (or tangential) curvature for channel initiation. These thresholds can be determined by building curvature rasters using the makegrids program, classifying by proposed threshold values, and plotting on a shaded relief image to see where a proposed threshold would allow channel initiation. The LTP thresholds described above provide a similar and more easily interpreted method of using topography inferred from the DEM for identifying channels.\n\n\n3.3.4 Minimum flow length\nBldgrds iteratively traverses every flow path within a DEM in a downslope direction and checks each cell to see if it meets the channel-initiation criteria. As seen in the Figure 3.1 and Figure 3.3 above, the criteria can be met for some portion of the flow path, but then no longer be met further downslope. Bldgrds requires specification of the minimum length over which the initiation criteria must be met before it will initialize a channel. The appropriate length depends on the resolution of the DEM and on the roughness of the terrain. If topographic channel indicators are indistinct, small zones where initiation thresholds are met can arise from noise in the DEM or small-scale roughness in the terrain.",
    "crumbs": [
      "Tasks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Build a stream layer</span>"
    ]
  },
  {
    "objectID": "CreateStreamLayer.html#channel-courses",
    "href": "CreateStreamLayer.html#channel-courses",
    "title": "3  Build a stream layer",
    "section": "3.4 Channel Courses",
    "text": "3.4 Channel Courses\nThe cell-to-cell D8 flow paths used once channel initiation is met do not always follow the same course that the actual channels do. Sometimes evidence of the channel flow path is not visible in the DEM, sometimes there are multiple options, sometimes noise in the DEM misdirects the flow path. It can help to use information from DEM cells beyond those immediately adjacent and to bring in information from other data sources. Here are options used by bldgrds.\n\n3.4.1 Flow indicators\nTopographic indicators of a channel can also be used to guide channelized flow paths. The flowcat program (for flow categorization) uses one to four such indicators: 1) a threshold in flow accumulation calculated with D-infinity flow directions and no channel initiation, 2) geomorphon valley and pit types Jasiewicz and Stepinski (2013), 3) a threshold in plan (or tangential) curvature, and 4) a threshold for deviation from mean elevation (DEV). FlowCat creates a raster with each cell indicating the number of specified flow indicators that are met at each DEM cell. If all four indicators are used, then raster values range from 0 to 4. Bldgrds preferentially directs channels towards raster-cell values greater than zero, or greater than a specified minimum (e.g., if all four indicators are used, a minimum of two indicators must be met). This is done by excavating the corresponding cells in the DEM by a multiple of the flow-indicator raster.\n\n\n3.4.2 Water mask\nInfrared laser signals are largely absorbed by water and suffer from specular reflections, so there are few or no signal returns from open water, as illustrated in Figure 3.4 below.\n\n\n\n\n\n\nFigure 3.4: The upper panel shows a natural color NAIP (National Agriculture Imagery Program) image, the lower panel shows the same area with only the infrared ban. From a portion of the Sprague River Basin in Southern Oregon.\n\n\n\nLidar DEMs often have areas of water “hydroflattened”, so that the open-water zone has a single uniform elevation or a uniformly downstream decreasing elevation. In other cases, elevations over the open-water zone are interpolated from ground returns on either side, which can generate noisy DEM elevation values through the zone of open water. This can result in zig-zaggy flow paths, as shown in Figure 3.5 below, which then overestimate channel length and affect values of corresponding derivatives, such as channel gradient.\n\n\n\n\n\n\nFigure 3.5: Traced channel flow path (orange line) shown on a shaded relief image for the same area in @fig-RGB_Infrared.\n\n\n\nWe want channel flow paths through zones of open water to be smooth and to track through the center of the open-water zone. To accomplish that, we can provide bldgrds with a separate raster or polygonal water-mask layer. Bldgrds will direct flow paths through the center of these zones.\n\n\n\n\n\n\nFigure 3.6: The channel centerline (blue line) traced through the center of the water mask polygon (light blue).\n\n\n\nIn some cases, breaklines for hydroflattening are provided with lidar-derived DEMs. In other cases, we can build a water mask using multi-band imagery, like that shown in @fig-RGB_Infrared above. Open water appears dark in infra-red bands and can be delineated using image segmentation. Program waterMaskByTopo can generate a water-mask raster using the infrared band from e.g., NAIP. It also uses thresholds in DEV (Deviation from Mean Elevation, a Topographic Position Index) and gradient to distinguish shadows.\n\n\n3.4.3 DEM derivatives\nAzimuth, plan curvature, and the direction of steepest descent can also be used with varying degrees of influence to guide channelized flow directions. Azimuth and plan curvature are measured over a specified length scale. By specifying a length greater than the DEM grid-point spacing, azimuth and curvature use information beyond the elevation of adjacent points, which can reduce the influence of noise in the DEM. It can also cause flow paths to deviate from the steepest-descent path to an adjacent cell. One or more of these indicators may be used and, if more than one are specified, different degrees of influence can be specified for each. The choice of indicators, of length scales, and of the degree of influence to specify requires iterative experimentation.",
    "crumbs": [
      "Tasks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Build a stream layer</span>"
    ]
  },
  {
    "objectID": "CreateStreamLayer.html#sec-flowDiversions",
    "href": "CreateStreamLayer.html#sec-flowDiversions",
    "title": "3  Build a stream layer",
    "section": "3.5 Flow diversions",
    "text": "3.5 Flow diversions\nHigh-resolution lidar DEMs resolve road prisms and other potential blockages to channel flow. The carving algorithm used to drain closed depressions will often trace the correct flow path, but not in all cases, as shown in Figure 3.7 below. If these apparent blockages have drainage structures, such as culverts, not visible in the DEM, these need to be specified from other data sources.\n\n\n\n\n\n\nFigure 3.7: Channel courses (orange lines) are diverted by the road visible on the north side of the river in this shaded relief image from the Coast Range of Oregon.\n\n\n\nTypically, such other data sources are not available and the likely locations of culverts need to be manually digitized. This task is iterative: building a stream layer, looking for diversions, digitizing a culvert or drainage location, rebuilding the stream layer, and repeating until satisfied with the stream layer. Such manually digitized drainage structures are illustrated for the area shown in Figure 3.7 in Figure 3.8 below.\n\n\n\n\n\n\nFigure 3.8: Traced channel courses (blue lines) after manually adding likely culvert locations (black lines).",
    "crumbs": [
      "Tasks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Build a stream layer</span>"
    ]
  },
  {
    "objectID": "CreateStreamLayer.html#typical-workflow",
    "href": "CreateStreamLayer.html#typical-workflow",
    "title": "3  Build a stream layer",
    "section": "3.6 Typical Workflow",
    "text": "3.6 Typical Workflow\nWith high-resolution DEMs, a default strategy for channel initiation and flow-path routing is:\n\nRun program bldgrds with the “CALIBRATE” keyword (see Chapter 1). This will generate a .csv file with the channel density as a function of the ASe threshold value. Use this to determine appropriate threshold values (one for steep terrain, another for low-gradient terrain) for the DEM. The default exponent is 2 (as suggested in Montgomery and Foufoula-Georgiou 1993), but this can be changed to any desired value. A calibration run of bldgrds will also create a binary floating point raster (threshold_ID.flt) showing the ASe value for each DEM cell.\nUse program makegrids to create hillslope-gradient and tangential-curvature rasters for the DEM. Use program DEV to produce a Deviation from Mean Elevation (DEV) raster. Use length scales that span several DEM cells and wider than the smallest channels you want to resolve. For a 1-m DEM, 10 to 15 meter length scales work well. Plot these rasters, along with the threshold raster created by bldgrds, over a shaded relief image. Experiement with different threshold values to get a sense of how the upslope extent of mapped channels will vary with the chosen thresholds. Also evaluate these overlays to determine an appropriate minimum flow length overwhich the thresholds need to be met for channel initiation. Channel initiation.\nIf there are large rivers and water bodies in the study area, you may want to build a water mask for these areas. This can be done using program waterMaskByTopo, which uses the infrared band of NAIP imagery to identify open water. The water mask can be used with bldgrds to guide channel flow paths through these areas. There may be other sources of data for a water mask, such as the 2-D breaklines used to build river and lake polygons for the USGS 3DEP program.\nRun program bldgrds with the threshold values for ASe, DEV, and tangential curvature determined in step 2 above. Bldgrds will generate raster files for flow direction and accumulation and a point shapefile of the channel nodes that compose the channel network. Evaluate the channel extent and resulting channel density, and adjust threshold values if needed. Use the node shapefile and the flow accumulation raster to identify flow diversions at roads and manually digitize a road-crossing polyline shapefile. Identify errors in channel courses and manually digitize corrections to use as a channel mask.\nRun bldgrds again with the adjusted thresholds, and the water mask, channel mask, and road-crossing shapefiles. Check the output channel network. Repeat until no further issues are identified.\n\nBldgrds stores the output channel network in a binary data file called nodeNet_ID.dat. This is now available for all other NetStream programs.\n\n\n\n\nClarke, Sharon E., Kelly M. Burnett, and Daniel J. Miller. 2008. “Modeling Streams and Hydrogeomorphic Attributes in Oregon from Digital and Field Data.” Journal of the American Water Resources Association 44 (2): 459–77. https://doi.org/DOI: 10.1111/j.1752-1688.2008.00175.x.\n\n\nGallant, John C., and Michael F. Hutchinson. 2011. “A Differential Equation for Specific Catchment Area.” Water Resources Research 47 (5). https://doi.org/10.1029/2009wr008540.\n\n\nIjjasz-Vasquez, and Rafael L. Bras. 1995. “Scaling Regimes of Local Slope Versus Contributing Area in Digital Elevation Models.” Geomorphology 12: 299–311.\n\n\nJasiewicz, J., and T. F. Stepinski. 2013. “Geomorphons - a Pattern Recognition Approach to Classification and Mapping of Landforms.” Geomorphology 182: 147–56. https://doi.org/10.1016/j.geomorph.2012.11.005.\n\n\nJenson, S. K., and J. O. Domingue. 1988. “Extracting Topographic Structure from Digital Elevation Data for Geographic Information System Analysis.” Photogrammetric Engineering and Remote Sensing 54 (11): 1593–1600.\n\n\nMinár, Jozef, Ian S. Evans, and Marián Jenčo. 2020. “A Comprehensive System of Definitions of Land Surface (Topographic) Curvatures, with Implications for Their Application in Geoscience Modelling and Prediction.” Earth-Sc. Rev. 211. https://doi.org/10.1016/j.earscirev.2020.103414.\n\n\nMontgomery, David R., and Efi Foufoula-Georgiou. 1993. “Channel Network Source Representation Using Digital Elevation Models.” Water Resources Research 29 (12): 3925–34.\n\n\nNewman, D. R., J. B. Lindsay, and J. M. H. Cockburn. 2018. “Evaluating Metrics of Local Topographic Position for Multiscale Geomorphometric Analysis.” Geomorphology 312: 40–50. https://doi.org/doi:10.1016/j.geomorph.2018.04.003.\n\n\nOrlandini, Stefano, Giovanni Moretti, Marco Franchini, Barbara Aldighieri, and Bruno Testa. 2003. “Path-Based Methods for the Determination of Nondispersive Drainage Directions in Grid-Based Digital Elevation Models.” Water Resources Research 39 (6). https://doi.org/10.1029/2002WR001639.\n\n\nSoille, Pierre, Jürgen Vogt, and Roberto Colombo. 2003. “Carving and Adaptive Drainage Enforcement of Grid Digital Elevation Models.” Water Resources Research 39 (12). https://doi.org/doi:10.1029/2002WR001879.\n\n\nStepinski, T. F., and Jasiewicz. J. 2011. “Geomorphons - a New Approach to Classification of Landforms.” Proceedings of Geomorphometry, 109–12.\n\n\nTarboton, David G. 1997. “A New Method for the Determination of Flow Directions and Upslope Areas in Grid Digital Elevation Models.” Water Resources Research 33 (2): 309–19.\n\n\nWang, Yi-Jie, Cheng-Zhi Qin, and A-Xing Zhu. 2019. “Review on Algorithms of Dealing with Depressions in Grid DEM.” Annals of GIS 25 (2): 83–97. https://doi.org/10.1080/19475683.2019.1604571.\n\n\nWilson, John P., Graeme Aggett, Deng Yongxin, and Christine S. Lam. 2008. “Water in the Landscape: A Review of Contemporary Flow Routing Algorithms.” In, edited by Qiming Zhou, Brian Lees, and Guo-an Tang, 213–36. Berlin: Springer.",
    "crumbs": [
      "Tasks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Build a stream layer</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "4  Summary",
    "section": "",
    "text": "Maybe we don’t need this.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Barquin, José, Lee E. Benda, Ferdinando Villan, Lee E. Brown, Nuria\nBonada, David R. Vietes, Tom J. Battin, et al. 2015a. “Coupling\nVirtual Watersheds with Ecosystem Services Assessment: A 21st Century\nPlatform to Support River Research and Management.” WIREs\nWater 2 (6): 609–21. https://doi.org/10.1002/wat2.1106.\n\n\n———, et al. 2015b. “Coupling Virtual Watersheds with Ecosystem\nServices Assessment: A 21st Century Platform to Support River Research\nand Management.” WIREs Water 2 (6): 609–21. https://doi.org/10.1002/wat2.1106.\n\n\nBenda, Lee, Daniel J. Miller, Kevin Andras, Paul Bigelow, Gordon H.\nReeves, and David Michael. 2007. “NetMap: A New Tool in Support of\nWatershed Science and Resource Management.” Forest\nScience 53 (2): 206–19. https://doi.org/https://doi.org/10.1093/forestscience/53.2.206.\n\n\nBenda, Lee, Daniel Miller, Jose Barquin, Richard J. McCleary, TiJiu Cai,\nand Y. Ji. 2016. “Building Virtual Watersheds: A Global\nOpportunity to Strengthen Resource Management and Conservation.”\nEnvironmental Management 57: 722–39. https://doi.org/10.1007/s00267-015-0634-6.\n\n\nClarke, Sharon E., Kelly M. Burnett, and Daniel J. Miller. 2008a.\n“Modeling Streams and Hydrogeomorphic Attributes in Oregon from\nDigital and Field Data.” Journal of the American Water\nResources Association 44 (2): 459–77. https://doi.org/DOI:\n10.1111/j.1752-1688.2008.00175.x.\n\n\n———. 2008b. “Modeling Streams and Hydrogeomorphic Attributes in\nOregon from Digital and Field Data.” Journal of the American\nWater Resources Association 44 (2): 459–77. https://doi.org/DOI:\n10.1111/j.1752-1688.2008.00175.x.\n\n\nGallant, John C., and Michael F. Hutchinson. 2011. “A Differential\nEquation for Specific Catchment Area.” Water Resources\nResearch 47 (5). https://doi.org/10.1029/2009wr008540.\n\n\nGonzález-Ferreras, A. M., and J. Barquín. 2017. “Mapping the\nTemporary and Perennial Character of Whole River Networks.”\nWater Resources Research. https://doi.org/10.1002/2017wr020390.\n\n\nIjjasz-Vasquez, and Rafael L. Bras. 1995. “Scaling Regimes of\nLocal Slope Versus Contributing Area in Digital Elevation\nModels.” Geomorphology 12: 299–311.\n\n\nJenson, S. K., and J. O. Domingue. 1988. “Extracting Topographic\nStructure from Digital Elevation Data for Geographic Information System\nAnalysis.” Photogrammetric Engineering and Remote\nSensing 54 (11): 1593–1600.\n\n\nMiller, Daniel J. 2003. “Programs for DEM Analysis.” In.\nFort Collins, CO, USA: USDA Forest Service, Rocky Mountain Research\nStation. https://www.fsl.orst.edu/clams/download/pubs/miller_DEM_Programs_2003.pdf.\n\n\nMiller, D., L. Benda, J. DePasquale, and D. Albert. 2015.\n“Creation of a Digital Flowline Network from IfSAR 5-m DEMs for\nthe Matanuska-Susitna Basins: A Resource for Update of the National\nHydrographic Dataset in Alaska.” https://www.conservationgateway.org/ConservationByGeography/NorthAmerica/UnitedStates/alaska/scak/Documents/Miller_etal_MatSu_Elevation_Derived_Flow_Network_Report.pdf.\n\n\nMinár, Jozef, Ian S. Evans, and Marián Jenčo. 2020. “A\nComprehensive System of Definitions of Land Surface (Topographic)\nCurvatures, with Implications for Their Application in Geoscience\nModelling and Prediction.” Earth-Sc. Rev. 211. https://doi.org/10.1016/j.earscirev.2020.103414.\n\n\nMontgomery, David R., and Efi Foufoula-Georgiou. 1993. “Channel\nNetwork Source Representation Using Digital Elevation Models.”\nWater Resources Research 29 (12): 3925–34.\n\n\nNewman, D. R., J. B. Lindsay, and J. M. H. Cockburn. 2018.\n“Evaluating Metrics of Local Topographic Position for Multiscale\nGeomorphometric Analysis.” Geomorphology 312: 40–50. https://doi.org/doi:10.1016/j.geomorph.2018.04.003.\n\n\nOrlandini, Stefano, Giovanni Moretti, Marco Franchini, Barbara\nAldighieri, and Bruno Testa. 2003. “Path-Based Methods for the\nDetermination of Nondispersive Drainage Directions in Grid-Based Digital\nElevation Models.” Water Resources Research 39 (6). https://doi.org/10.1029/2002WR001639.\n\n\nPeñas, Francisco J., Felipe Fernández, Mileno Calvo, José Barquín, and\nLuis Pedraz. 2011. “Influence of Data Sources and Processing\nMethods on Theoretical River Network Quality.” Limnetica\n30 (2): 197–216. https://doi.org/DOI:\n10.23818/limn.30.16.\n\n\nSoille, Pierre, Jürgen Vogt, and Roberto Colombo. 2003. “Carving\nand Adaptive Drainage Enforcement of Grid Digital Elevation\nModels.” Water Resources Research 39 (12). https://doi.org/doi:10.1029/2002WR001879.\n\n\nStepinski, T. F., and Jasiewicz. J. 2011. “Geomorphons - a New\nApproach to Classification of Landforms.” Proceedings of\nGeomorphometry, 109–12.\n\n\nTarboton, David G. 1997. “A New Method for the Determination of\nFlow Directions and Upslope Areas in Grid Digital Elevation\nModels.” Water Resources Research 33 (2): 309–19.\n\n\nWang, Yi-Jie, Cheng-Zhi Qin, and A-Xing Zhu. 2019. “Review on\nAlgorithms of Dealing with Depressions in Grid DEM.” Annals\nof GIS 25 (2): 83–97. https://doi.org/10.1080/19475683.2019.1604571.\n\n\nWilson, John P., Graeme Aggett, Deng Yongxin, and Christine S. Lam.\n2008. “Water in the Landscape: A Review of Contemporary Flow\nRouting Algorithms.” In, edited by Qiming Zhou, Brian Lees, and\nGuo-an Tang, 213–36. Berlin: Springer.",
    "crumbs": [
      "References"
    ]
  }
]